/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


&mt {
  //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

/ { 

    macros {
        #include "macros.dtsi"
        #include "latin_macros_verbose.dtsi"
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        
        fhm: fast_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "FAST_HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        
        fls: fast_layer_switch {
            compatible = "zmk,behavior-hold-tap";
            label = "FAST_LAYER_SWITCH";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&sl>, <&kp>;
        };
        
        ls: layer_switches {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_SWITCHES";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <300>;
            bindings = <&mo>, <&to>;
            //&ls HOLD TAP
        }; 

        hsl: hold_sl {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_SL";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <300>;
            bindings = <&sl>, <&kp>;
            //&ls HOLD TAP
        }; 

        asl: alpha_sl {
            compatible = "zmk,behavior-hold-tap";
            label = "ALPHA_SL";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <300>;
            bindings = <&mo>, <&kp>;
            //&ls HOLD TAP
        }; 

        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <500>;
            bindings = <&sl 3>, <&to 3>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_home_layer {
            timeout-ms = <250>;
            key-positions = <31 32>;
            bindings = <&to 0>;
        };

        combo_esc {
            timeout-ms = <50>;
            key-positions = <21 22>;
            bindings = <&kp ESC>;
        };
        
         combo_tab {
            timeout-ms = <210>;
            key-positions = <6 8>;
            bindings = <&kp TAB>;
        };
               
        combo_delete {
            timeout-ms = <300>;
            key-positions = <8 9>;
            bindings = <&kp DEL>;
        };

        combo_enter {
            timeout-ms = <210>;
            key-positions = <7 8>;
            bindings = <&kp ENTER>;
        };

        combo_caps_layer {
            timeout-ms = <300>;
            key-positions = <30 33>;
            bindings = <&to 1>;
        };

    };

    keymap {
            compatible = "zmk,keymap";
            
        default_layer {
    bindings = <
    &fls 3 V &kp G &fls 3 H &kp P &kp K 						    &kp EQUAL &kp SEMI &fls 3 DOT &kp COMMA &fls 2 BSPC 
    &hm LGUI R &hm LALT S &hm LCTRL N &hm LSHFT T &kp F 	&kp J &hm RSHFT A &hm RCTRL E &hm RALT C &hm RGUI I
    &fls 8 X &kp M &kp L &kp D &kp B				            &kp FSLH &kp U  &kp O &kp W &kp Y
                    &sl 2   &sl 1                           &kp SPC &td0 
    >;
    };

        cap_layer {
    bindings = <
    &kp LS(V) &kp LS(G) &kp LS(H) &kp LS(P) &kp LS(K)                           &kp PLUS &kp COLON &kp MINUS &kp UNDER &fhm DQT SQT
    &hm LGUI LS(R) &hm LALT LS(S) &hm LCTRL LS(N) &hm LSHFT LS(T) &kp LS(F)     &kp LS(J) &hm RSHFT LS(A) &hm RCTRL LS(E) &hm RALT LS(C) &hm RGUI LS(I)
    &kp LS(X) &kp LS(M) &kp LS(L) &kp LS(D) &kp LS(B)                           &kp QMARK &kp LS(U)  &kp LS(O) &kp LS(W) &kp LS(Y)
                    &to 0      &to 0  				                            &kp SPC &to 3 
    >;
    };

        symbol_layer {
    bindings = <
    &kp EXCL  &kp ATSN  &kp HASH  &kp DLLR  &none                           &none &kp PRCNT  &kp CARET &kp AMPS &kp STAR
    &hm LGUI TILDE  &hm LALT Z  &hm LCTRL Q  &hm LSHFT BSLH  &kp PIPE       &kp LEFT &hm RSHFT LBRC &hm RCTRL LPRN  &hm RALT RPRN  &hm RGUI RBRC
    &kp GRAVE  &kp LS(Z)  &kp LS(Q)  &kp N0  &none  	                    &kp SEMI &kp LT &kp LBKT &kp RBKT &kp GT  
                                            &to 0  &to 0                    &kp SPC &to 3 
    >;
    };	

        num_nav_layer {
    bindings = <
    &none &none &kp UP &none &to 4                                          &kp COMMA &kp N7 &kp N8 &kp N9 &kp STAR
    &hm LGUI LGUI &kp LEFT &kp DOWN &kp RIGHT &none        &kp DOT &hm RSHFT N4 &hm RCTRL N5 &hm RALT N6 &hm RGUI N0
    &kp H &kp K &kp J &kp L &kp F4                                           &kp FSLH &kp N1 &kp N2 &kp N3 &kp MINUS
                        &to 0 &to 0                                         &kp SPC &kp PLUS
    >;
    };

        bt_layer {
    bindings = <
    &none &none &none &none &bootloader     &out OUT_BLE &none           &none         &none         &bt BT_CLR
    &none &none &none &none &none           &none        &bt BT_SEL 4    &none         &none         &bt BT_SEL 0
    &none &none &none &none &none           &out OUT_USB &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &none
                        &to 0 &to 0         &to 0 &to 0
    >;
    };
        
        latin_macron {
    bindings = <
    &none &none &none &none &none       &none &none &none &none &none
    &none &none &none &none &none       &none &m_a &m_e &none &m_i
    &none &none &none &none &none       &none &m_u &m_o &none &none
                        &to 0 &to 0     &to 0 &to 0
    >;
    };

        latin_accent {
    bindings = <
    &none &none &none &none &none       &none &none &none &none &none
    &none &none &none &none &none       &none &a_a &a_e &none &a_i
    &none &none &none &none &none       &none &a_u &a_o &none &none
                        &to 0 &to 0     &to 0 &to 0
    >;
    };

        latin_macron_and_accent {
    bindings = <
    &none &none &none &none &none       &none &none &none &none &none
    &none &none &none &none &none       &none &m_a_a &m_a_e &none &m_a_i
    &none &none &none &none &none       &none &m_a_u &m_a_o &none &none
                        &to 0 &to 0     &to 0 &to 0
    >;
    };
        
        latin_letters {
    bindings = <
    &none &none &none &none &none       &a_u    &a_a    &a_e    &a_o    &a_i
    &none &none &none &none &none       &m_u    &m_a    &m_e    &m_o    &m_i
    &none &none &none &none &none       &m_a_u  &m_a_a  &m_a_e  &m_a_o  &m_a_i
                        &to 0 &to 0     &copy_all &to 0
    >;
    };

	};
};
