/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


&mt {
  //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

/ { 

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        
        ls: layer_switches {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_SWITCHES";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <300>;
            bindings = <&mo>, <&to>;
            //&ls HOLD TAP
        }; 

        sls: space_layer_switches {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_SWITCHES";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&kp>;
            //&ls HOLD TAP
        }; 
    };

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <20>;
            key-positions = <21 22>;
            bindings = <&kp ESC>;
        };
        
         combo_tab {
            timeout-ms = <150>;
            key-positions = <26 28>;
            bindings = <&kp TAB>;
        };
               
        combo_quote {
            timeout-ms = <20>;
            key-positions = <21 22>;
            bindings = <&kp QT>;
        };
       
        combo_delete {
            timeout-ms = <20>;
            key-positions = <8 9>;
            bindings = <&kp DEL>;
        };

        combo_enter {
            timeout-ms = <20>;
            key-positions = <27 28>;
            bindings = <&kp ENTER>;
        };

        combo_caps_layer {
            timeout-ms = <300>;
            key-positions = <31 32>;
            bindings = <&sl 1>;
        };

    };

    keymap {
            compatible = "zmk,keymap";
            
        default_layer {
    bindings = <
    &kp V &kp G &kp H &kp P &kp K 						    &kp EQUAL &kp SEMI &kp DOT &kp COMMA &kp BSPC 
    &hm LGUI R &hm LALT S &hm LCTRL N &hm LSHFT T &kp F 	&kp J &hm RSHFT A &hm RCTRL E &hm RALT C &hm RGUI I
    &kp X &kp M &kp L &kp D &kp B				            &kp FSLH &kp U  &kp O &kp W &kp Y
                    &kp SPC   &sl 2  	        	        &kp SPC   &to 3 
    >;
    };

        cap_layer {
    bindings = <
    &kp LS(V) &kp LS(G) &kp LS(H) &kp LS(P) &kp LS(K)                           &kp PLUS &kp COLON &kp MINUS &kp UNDER &kp DQT 
    &hm LGUI LS(R) &hm LALT LS(S) &hm LCTRL LS(N) &hm LSHFT LS(T) &kp LS(F)     &kp LS(J) &hm RSHFT LS(A) &hm RCTRL LS(E) &hm RALT LS(C) &hm RGUI LS(I)
    &kp LS(X) &kp LS(M) &kp LS(L) &kp LS(D) &kp LS(B)                           &kp QMARK &kp LS(U)  &kp LS(O) &kp LS(W) &kp LS(Y)
                    &to 0      &to 0  				                            &kp SPC &to 3 
    >;
    };

        symbol_layer {
    bindings = <
    &kp EXCL  &kp ATSN  &kp HASH  &kp DLLR  &none                           &none &kp PRCNT  &kp CARET &kp AMPS &kp STAR
    &hm LGUI TILDE  &hm LALT Z  &hm LCTRL Q  &hm LSHFT BSLH  &kp PIPE       &kp LEFT &hm RSHFT LBKT &hm RCTRL LPRN  &hm RALT RPRN  &hm RGUI RBKT
    &kp GRAVE  &kp LS(Z)  &kp LS(Q)  &kp N0  &none  	                    &kp SEMI &kp LT &kp LBRC &kp RBRC &kp GT  
                                            &to 0  &to 0                    &kp SPC &to 3 
    >;
    };	

        num_nav_layer {
    bindings = <
    &none &none &kp UP &none &to 4                                          &kp BSLH &kp N7 &kp N8 &kp N9 &kp MINUS
    &hm LGUI LGUI &kp LEFT &kp DOWN &kp RIGHT &none        &kp DOT &hm RSHFT N4 &hm RCTRL N5 &hm RALT N6 &hm RGUI PLUS
    &kp H &kp K &kp J &kp L &none                                           &kp COMMA   &kp N1 &kp N2 &kp N3 &kp STAR
                        &to 0 &to 0                                         &kp N0 &to 3
    >;
    };

        bt_layer {
    bindings = <
    &none &none &none &none &none                                           &bt BT_CLR &none &none &none &none
    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3 &bt BT_SEL 4     &none &none &none &none &none
    &none &none &none &none &none                                           &none &none &none &none &none
                        &to 0 &to 0                                         &to 0 &to 4
    >;
    };
        
	};
};
